#!/bin/bash
# This file compiles libArgumentParser.so & libUtil

if [ -d build ]; then
	echo "Already existing folder named \`build\` found."
	echo -n "What do you want to do, r(ename existing folder), e(rase existing folder) or o(verwrite conflicting files)? "

	read ans
	while [[ $ans != 'r' && $ans != 'e' && $ans != 'o' ]]; do
		echo -n "Answer only r, e or o: "
		read ans
	done

	if [ $ans = 'r' ]; then
		end=0
		
		if ! [ -d "_build" ]; then
			mv build _build
			echo "folder renamed to \`_build\`"
		else
			count=0
			while [ -d "_build ($count)" ]; do
				count=$((count+1))
			done

			mv build "_build ($count)"
			echo "folder renamed to \`_build ($count)\`."
		fi
		mkdir build
	elif [ $ans = 'e' ]; then
		rm -rf build/* && echo "folder erased."
	elif [ $ans = 'o' ]; then
		true # do nothing
	else
		echo "You just found a bug!"
		exit 2
	fi
	cd build
elif [[ $(pwd) != */build ]]; then
	mkdir build
	cd build
fi

cmake .. && cmake --build .
if [[ $? = 0 && "$1" = "--install" ]]; then
	cp ../Util.hpp		Util.hpp	# Copies the headers into temporary files for the install script
	cp ../Parser.hpp	Parser.hpp
	[[ -f installLibs ]]	&&  ./installLibs
	[[ -f ../installLibs ]]	&& ../installLibs		# If the file doesn't exists, checks the parent directory

	rm Util.hpp Parser.hpp
fi
echo "done"